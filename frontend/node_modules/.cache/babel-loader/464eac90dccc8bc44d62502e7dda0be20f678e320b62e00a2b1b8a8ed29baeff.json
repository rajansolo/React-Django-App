{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CigarChief\\\\blog_project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  // Fetch posts from the backend API\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/api/posts/\") // Replace with your backend URL\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      setPosts(data);\n    }).catch(error => {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    });\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newPost = {\n      username,\n      content\n    };\n    fetch(\"http://127.0.0.1:8000/api/posts/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPost)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to post new blog\");\n      }\n      return response.json();\n    }).then(data => {\n      // Add the new post to the top of the posts list\n      setPosts([data, ...posts]);\n      setUsername(\"\"); // Clear the input fields\n      setContent(\"\");\n    }).catch(error => {\n      console.error(\"Error while posting new blog:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: content,\n            onChange: e => setContent(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: post.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), \": \", post.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: new Date(post.created_at).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hLU3tgqxQw98eOyuWz+J9ffWEI8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","posts","setPosts","username","setUsername","content","setContent","fetch","then","response","ok","Error","json","data","catch","error","console","handleSubmit","e","preventDefault","newPost","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","map","post","index","Date","created_at","toLocaleString","_c","$RefreshReg$"],"sources":["D:/Projects/CigarChief/blog_project/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  // Fetch posts from the backend API\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/api/posts/\") // Replace with your backend URL\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setPosts(data);\n      })\n      .catch((error) => {\n        console.error(\"There was a problem with the fetch operation:\", error);\n      });\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newPost = { username, content };\n\n    fetch(\"http://127.0.0.1:8000/api/posts/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPost),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Failed to post new blog\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        // Add the new post to the top of the posts list\n        setPosts([data, ...posts]);\n        setUsername(\"\"); // Clear the input fields\n        setContent(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error while posting new blog:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Blog Posts</h1>\n\n      {/* Form to add a new post */}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>\n            Username:\n            <input\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Content:\n            <textarea\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              required\n            ></textarea>\n          </label>\n        </div>\n        <button type=\"submit\">Post</button>\n      </form>\n\n      {/* List of posts */}\n      <ul>\n        {posts.map((post, index) => (\n          <li key={index}>\n            <strong>{post.username}</strong>: {post.content}\n            <br />\n            <small>{new Date(post.created_at).toLocaleString()}</small>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}