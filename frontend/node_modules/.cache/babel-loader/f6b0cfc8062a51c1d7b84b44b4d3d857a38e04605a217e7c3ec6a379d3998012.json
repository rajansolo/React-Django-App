{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\CigarChief\\\\blog_project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"./index\";\n\n// function App() {\n//   const [posts, setPosts] = useState([]);\n//   const [username, setUsername] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [editingPostId, setEditingPostId] = useState(null);\n//   const [editingContent, setEditingContent] = useState(\"\");\n\n//   // Fetch posts from the backend API\n//   useEffect(() => {\n//     fetch(\"http://127.0.0.1:8000/api/posts/\")\n//       .then((response) => response.json())\n//       .then((data) => setPosts(data));\n//   }, []);\n\n//   // Handle form submission for creating a post\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     const newPost = { username, content };\n\n//     fetch(\"http://127.0.0.1:8000/api/posts/\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(newPost),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setPosts([data, ...posts]);\n//         setUsername(\"\");\n//         setContent(\"\");\n//       });\n//   };\n\n//   // Handle delete post\n//   const handleDelete = (postId) => {\n//     fetch(`http://127.0.0.1:8000/api/posts/${postId}/`, {\n//       method: \"DELETE\",\n//     })\n//       .then(() => {\n//         setPosts(posts.filter((post) => post.id !== postId));\n//       })\n//       .catch((error) => console.error(\"Error deleting post:\", error));\n//   };\n\n//   // Handle edit post\n//   const handleEdit = (postId) => {\n//     setEditingPostId(postId);\n//     const postToEdit = posts.find((post) => post.id === postId);\n//     setEditingContent(postToEdit.content);\n//   };\n\n//   // Handle save edited post\n//   const handleSaveEdit = (postId) => {\n//     fetch(`http://127.0.0.1:8000/api/posts/${postId}/`, {\n//       method: \"PUT\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ content: editingContent }),\n//     })\n//       .then((response) => response.json())\n//       .then((updatedPost) => {\n//         setPosts(\n//           posts.map((post) =>\n//             post.id === postId\n//               ? { ...post, content: updatedPost.content }\n//               : post\n//           )\n//         );\n//         setEditingPostId(null);\n//         setEditingContent(\"\");\n//       })\n//       .catch((error) => console.error(\"Error updating post:\", error));\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <h1 className=\"header\">Blog Posts</h1>\n\n//       {/* Blog Form */}\n//       <form className=\"post-form\" onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label className=\"label\" htmlFor=\"username\">\n//             Username:\n//           </label>\n//           <input\n//             className=\"input\"\n//             id=\"username\"\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label className=\"label\" htmlFor=\"content\">\n//             Content:\n//           </label>\n//           <textarea\n//             className=\"textarea\"\n//             id=\"content\"\n//             value={content}\n//             onChange={(e) => setContent(e.target.value)}\n//             required\n//           ></textarea>\n//         </div>\n//         <button className=\"submit-button\" type=\"submit\">\n//           Post\n//         </button>\n//       </form>\n\n//       {/* Posts Section */}\n//       <div className=\"posts-container\">\n//         <h2>All Blog Posts</h2>\n//         {posts.map((post) => (\n//           <div key={post.id} className=\"post\">\n//             <div className=\"post-header\">\n//               <span>{post.username}</span>\n//               <span>{new Date(post.created_at).toLocaleString()}</span>\n//             </div>\n//             {editingPostId === post.id ? (\n//               <div>\n//                 <textarea\n//                   className=\"textarea\"\n//                   value={editingContent}\n//                   onChange={(e) => setEditingContent(e.target.value)}\n//                 ></textarea>\n//                 <button\n//                   className=\"edit-button\"\n//                   onClick={() => handleSaveEdit(post.id)}\n//                 >\n//                   Save\n//                 </button>\n//                 <button\n//                   className=\"cancel-button\"\n//                   onClick={() => setEditingPostId(null)}\n//                 >\n//                   Cancel\n//                 </button>\n//               </div>\n//             ) : (\n//               <div className=\"post-content\">{post.content}</div>\n//             )}\n//             <div className=\"post-actions\">\n//               <button\n//                 className=\"edit-button\"\n//                 onClick={() => handleEdit(post.id)}\n//               >\n//                 Edit\n//               </button>\n//               <button\n//                 className=\"delete-button\"\n//                 onClick={() => handleDelete(post.id)}\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [editingPostId, setEditingPostId] = useState(null);\n  const [editingContent, setEditingContent] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/api/posts/\").then(response => response.json()).then(data => setPosts(data));\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newPost = {\n      username,\n      content\n    };\n    fetch(\"http://127.0.0.1:8000/api/posts/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPost)\n    }).then(response => response.json()).then(data => {\n      setPosts([data, ...posts]);\n      setUsername(\"\");\n      setContent(\"\");\n    });\n  };\n  const handleEdit = postId => {\n    setEditingPostId(postId);\n    const postToEdit = posts.find(post => post.id === postId);\n    setEditingContent(postToEdit.content);\n  };\n  const handleSaveEdit = postId => {\n    fetch(`http://127.0.0.1:8000/api/posts/${postId}/`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        content: editingContent\n      })\n    }).then(response => response.json()).then(updatedPost => {\n      setPosts(posts.map(post => post.id === postId ? {\n        ...post,\n        ...updatedPost\n      } : post));\n      setEditingPostId(null);\n      setEditingContent(\"\");\n    });\n  };\n  const handleDelete = postId => {\n    fetch(`http://127.0.0.1:8000/api/posts/${postId}/`, {\n      method: \"DELETE\"\n    }).then(() => {\n      setPosts(posts.filter(post => post.id !== postId));\n    }).catch(error => console.error(\"Error deleting post:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"content\",\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textarea\",\n          id: \"content\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Blog Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: post.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(post.created_at).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: editingPostId === post.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"textarea\",\n              value: editingContent,\n              onChange: e => setEditingContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: () => handleSaveEdit(post.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-button\",\n              onClick: () => setEditingPostId(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), post.last_edited && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Last Edited: \", new Date(post.last_edited).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: () => handleEdit(post.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDelete(post.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eyxFeoibpz5sivQFfXZMuA7mUKs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","username","setUsername","content","setContent","editingPostId","setEditingPostId","editingContent","setEditingContent","fetch","then","response","json","data","handleSubmit","e","preventDefault","newPost","method","headers","body","JSON","stringify","handleEdit","postId","postToEdit","find","post","id","handleSaveEdit","updatedPost","map","handleDelete","filter","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","Date","created_at","toLocaleString","onClick","last_edited","_c","$RefreshReg$"],"sources":["D:/Projects/CigarChief/blog_project/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import \"./index\";\n\n// function App() {\n//   const [posts, setPosts] = useState([]);\n//   const [username, setUsername] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [editingPostId, setEditingPostId] = useState(null);\n//   const [editingContent, setEditingContent] = useState(\"\");\n\n//   // Fetch posts from the backend API\n//   useEffect(() => {\n//     fetch(\"http://127.0.0.1:8000/api/posts/\")\n//       .then((response) => response.json())\n//       .then((data) => setPosts(data));\n//   }, []);\n\n//   // Handle form submission for creating a post\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     const newPost = { username, content };\n\n//     fetch(\"http://127.0.0.1:8000/api/posts/\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(newPost),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setPosts([data, ...posts]);\n//         setUsername(\"\");\n//         setContent(\"\");\n//       });\n//   };\n\n//   // Handle delete post\n//   const handleDelete = (postId) => {\n//     fetch(`http://127.0.0.1:8000/api/posts/${postId}/`, {\n//       method: \"DELETE\",\n//     })\n//       .then(() => {\n//         setPosts(posts.filter((post) => post.id !== postId));\n//       })\n//       .catch((error) => console.error(\"Error deleting post:\", error));\n//   };\n\n//   // Handle edit post\n//   const handleEdit = (postId) => {\n//     setEditingPostId(postId);\n//     const postToEdit = posts.find((post) => post.id === postId);\n//     setEditingContent(postToEdit.content);\n//   };\n\n//   // Handle save edited post\n//   const handleSaveEdit = (postId) => {\n//     fetch(`http://127.0.0.1:8000/api/posts/${postId}/`, {\n//       method: \"PUT\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ content: editingContent }),\n//     })\n//       .then((response) => response.json())\n//       .then((updatedPost) => {\n//         setPosts(\n//           posts.map((post) =>\n//             post.id === postId\n//               ? { ...post, content: updatedPost.content }\n//               : post\n//           )\n//         );\n//         setEditingPostId(null);\n//         setEditingContent(\"\");\n//       })\n//       .catch((error) => console.error(\"Error updating post:\", error));\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <h1 className=\"header\">Blog Posts</h1>\n\n//       {/* Blog Form */}\n//       <form className=\"post-form\" onSubmit={handleSubmit}>\n//         <div className=\"form-group\">\n//           <label className=\"label\" htmlFor=\"username\">\n//             Username:\n//           </label>\n//           <input\n//             className=\"input\"\n//             id=\"username\"\n//             type=\"text\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label className=\"label\" htmlFor=\"content\">\n//             Content:\n//           </label>\n//           <textarea\n//             className=\"textarea\"\n//             id=\"content\"\n//             value={content}\n//             onChange={(e) => setContent(e.target.value)}\n//             required\n//           ></textarea>\n//         </div>\n//         <button className=\"submit-button\" type=\"submit\">\n//           Post\n//         </button>\n//       </form>\n\n//       {/* Posts Section */}\n//       <div className=\"posts-container\">\n//         <h2>All Blog Posts</h2>\n//         {posts.map((post) => (\n//           <div key={post.id} className=\"post\">\n//             <div className=\"post-header\">\n//               <span>{post.username}</span>\n//               <span>{new Date(post.created_at).toLocaleString()}</span>\n//             </div>\n//             {editingPostId === post.id ? (\n//               <div>\n//                 <textarea\n//                   className=\"textarea\"\n//                   value={editingContent}\n//                   onChange={(e) => setEditingContent(e.target.value)}\n//                 ></textarea>\n//                 <button\n//                   className=\"edit-button\"\n//                   onClick={() => handleSaveEdit(post.id)}\n//                 >\n//                   Save\n//                 </button>\n//                 <button\n//                   className=\"cancel-button\"\n//                   onClick={() => setEditingPostId(null)}\n//                 >\n//                   Cancel\n//                 </button>\n//               </div>\n//             ) : (\n//               <div className=\"post-content\">{post.content}</div>\n//             )}\n//             <div className=\"post-actions\">\n//               <button\n//                 className=\"edit-button\"\n//                 onClick={() => handleEdit(post.id)}\n//               >\n//                 Edit\n//               </button>\n//               <button\n//                 className=\"delete-button\"\n//                 onClick={() => handleDelete(post.id)}\n//               >\n//                 Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [editingPostId, setEditingPostId] = useState(null);\n  const [editingContent, setEditingContent] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:8000/api/posts/\")\n      .then((response) => response.json())\n      .then((data) => setPosts(data));\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newPost = { username, content };\n\n    fetch(\"http://127.0.0.1:8000/api/posts/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newPost),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setPosts([data, ...posts]);\n        setUsername(\"\");\n        setContent(\"\");\n      });\n  };\n\n  const handleEdit = (postId) => {\n    setEditingPostId(postId);\n    const postToEdit = posts.find((post) => post.id === postId);\n    setEditingContent(postToEdit.content);\n  };\n\n  const handleSaveEdit = (postId) => {\n    fetch(`http://127.0.0.1:8000/api/posts/${postId}/`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ content: editingContent }),\n    })\n      .then((response) => response.json())\n      .then((updatedPost) => {\n        setPosts(\n          posts.map((post) =>\n            post.id === postId ? { ...post, ...updatedPost } : post\n          )\n        );\n        setEditingPostId(null);\n        setEditingContent(\"\");\n      });\n  };\n\n  const handleDelete = (postId) => {\n    fetch(`http://127.0.0.1:8000/api/posts/${postId}/`, {\n      method: \"DELETE\",\n    })\n      .then(() => {\n        setPosts(posts.filter((post) => post.id !== postId));\n      })\n      .catch((error) => console.error(\"Error deleting post:\", error));\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"header\">Blog Posts</h1>\n\n      <form className=\"post-form\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label className=\"label\" htmlFor=\"username\">\n            Username:\n          </label>\n          <input\n            className=\"input\"\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label className=\"label\" htmlFor=\"content\">\n            Content:\n          </label>\n          <textarea\n            className=\"textarea\"\n            id=\"content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            required\n          ></textarea>\n        </div>\n        <button className=\"submit-button\" type=\"submit\">\n          Post\n        </button>\n      </form>\n\n      <div className=\"posts-container\">\n        <h2>All Blog Posts</h2>\n        {posts.map((post) => (\n          <div key={post.id} className=\"post\">\n            <div className=\"post-header\">\n              <span>{post.username}</span>\n              <span>{new Date(post.created_at).toLocaleString()}</span>\n            </div>\n            <div className=\"post-content\">\n              {editingPostId === post.id ? (\n                <>\n                  <textarea\n                    className=\"textarea\"\n                    value={editingContent}\n                    onChange={(e) => setEditingContent(e.target.value)}\n                  ></textarea>\n                  <button\n                    className=\"edit-button\"\n                    onClick={() => handleSaveEdit(post.id)}\n                  >\n                    Save\n                  </button>\n                  <button\n                    className=\"cancel-button\"\n                    onClick={() => setEditingPostId(null)}\n                  >\n                    Cancel\n                  </button>\n                </>\n              ) : (\n                <p>{post.content}</p>\n              )}\n            </div>\n            {post.last_edited && (\n              <div className=\"post-footer\">\n                <small>\n                  Last Edited: {new Date(post.last_edited).toLocaleString()}\n                </small>\n              </div>\n            )}\n            <div className=\"post-actions\">\n              <button\n                className=\"edit-button\"\n                onClick={() => handleEdit(post.id)}\n              >\n                Edit\n              </button>\n              <button\n                className=\"delete-button\"\n                onClick={() => handleDelete(post.id)}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxD,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}